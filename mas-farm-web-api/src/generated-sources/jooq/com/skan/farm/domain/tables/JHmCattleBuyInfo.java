/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JHmCattleBuyInfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JHmCattleBuyInfo extends TableImpl<JHmCattleBuyInfoRecord> {

    private static final long serialVersionUID = 619536492;

    /**
     * The reference instance of <code>naive-it-farm.hm_cattle_buy_info</code>
     */
    public static final JHmCattleBuyInfo HM_CATTLE_BUY_INFO = new JHmCattleBuyInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JHmCattleBuyInfoRecord> getRecordType() {
        return JHmCattleBuyInfoRecord.class;
    }

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.buy_store_name</code>.
     */
    public final TableField<JHmCattleBuyInfoRecord, String> BUY_STORE_NAME = createField(DSL.name("buy_store_name"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.buy_date</code>.
     */
    public final TableField<JHmCattleBuyInfoRecord, LocalDateTime> BUY_DATE = createField(DSL.name("buy_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "\n");

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.buy_note</code>.
     */
    public final TableField<JHmCattleBuyInfoRecord, String> BUY_NOTE = createField(DSL.name("buy_note"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.buy_phone_number</code>.
     */
    public final TableField<JHmCattleBuyInfoRecord, String> BUY_PHONE_NUMBER = createField(DSL.name("buy_phone_number"), org.jooq.impl.SQLDataType.VARCHAR(11), this, "");

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.buy_sell_phone_number</code>. 구입 연락처 전화번호 2
     */
    public final TableField<JHmCattleBuyInfoRecord, String> BUY_SELL_PHONE_NUMBER = createField(DSL.name("buy_sell_phone_number"), org.jooq.impl.SQLDataType.VARCHAR(24), this, "구입 연락처 전화번호 2");

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.entity_identification_number</code>.
     */
    public final TableField<JHmCattleBuyInfoRecord, String> ENTITY_IDENTIFICATION_NUMBER = createField(DSL.name("entity_identification_number"), org.jooq.impl.SQLDataType.VARCHAR(24).nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.hm_cattle_buy_info.entity_management_number</code>. 개체관리번호
     */
    public final TableField<JHmCattleBuyInfoRecord, String> ENTITY_MANAGEMENT_NUMBER = createField(DSL.name("entity_management_number"), org.jooq.impl.SQLDataType.VARCHAR(24).nullable(false), this, "개체관리번호");

    /**
     * Create a <code>naive-it-farm.hm_cattle_buy_info</code> table reference
     */
    public JHmCattleBuyInfo() {
        this(DSL.name("hm_cattle_buy_info"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.hm_cattle_buy_info</code> table reference
     */
    public JHmCattleBuyInfo(String alias) {
        this(DSL.name(alias), HM_CATTLE_BUY_INFO);
    }

    /**
     * Create an aliased <code>naive-it-farm.hm_cattle_buy_info</code> table reference
     */
    public JHmCattleBuyInfo(Name alias) {
        this(alias, HM_CATTLE_BUY_INFO);
    }

    private JHmCattleBuyInfo(Name alias, Table<JHmCattleBuyInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private JHmCattleBuyInfo(Name alias, Table<JHmCattleBuyInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JHmCattleBuyInfo(Table<O> child, ForeignKey<O, JHmCattleBuyInfoRecord> key) {
        super(child, key, HM_CATTLE_BUY_INFO);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JHmCattleBuyInfoRecord> getPrimaryKey() {
        return Keys.KEY_HM_CATTLE_BUY_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<JHmCattleBuyInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<JHmCattleBuyInfoRecord>>asList(Keys.KEY_HM_CATTLE_BUY_INFO_PRIMARY);
    }

    @Override
    public JHmCattleBuyInfo as(String alias) {
        return new JHmCattleBuyInfo(DSL.name(alias), this);
    }

    @Override
    public JHmCattleBuyInfo as(Name alias) {
        return new JHmCattleBuyInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JHmCattleBuyInfo rename(String name) {
        return new JHmCattleBuyInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JHmCattleBuyInfo rename(Name name) {
        return new JHmCattleBuyInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
