/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JUsersRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JUsers extends TableImpl<JUsersRecord> {

    private static final long serialVersionUID = -275436554;

    /**
     * The reference instance of <code>naive-it-farm.users</code>
     */
    public static final JUsers USERS = new JUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JUsersRecord> getRecordType() {
        return JUsersRecord.class;
    }

    /**
     * The column <code>naive-it-farm.users.uuid</code>.
     */
    public final TableField<JUsersRecord, String> UUID = createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.users.description</code>.
     */
    public final TableField<JUsersRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.email</code>.
     */
    public final TableField<JUsersRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.fail_login_count</code>.
     */
    public final TableField<JUsersRecord, Long> FAIL_LOGIN_COUNT = createField(DSL.name("fail_login_count"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>naive-it-farm.users.fail_login_time</code>.
     */
    public final TableField<JUsersRecord, LocalDateTime> FAIL_LOGIN_TIME = createField(DSL.name("fail_login_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.users.gender</code>.
     */
    public final TableField<JUsersRecord, String> GENDER = createField(DSL.name("gender"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.last_login_time</code>.
     */
    public final TableField<JUsersRecord, LocalDateTime> LAST_LOGIN_TIME = createField(DSL.name("last_login_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.users.mobile_phone_number</code>.
     */
    public final TableField<JUsersRecord, String> MOBILE_PHONE_NUMBER = createField(DSL.name("mobile_phone_number"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.password</code>.
     */
    public final TableField<JUsersRecord, String> PASSWORD = createField(DSL.name("password"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.phone_number</code>.
     */
    public final TableField<JUsersRecord, String> PHONE_NUMBER = createField(DSL.name("phone_number"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.ssn_number</code>.
     */
    public final TableField<JUsersRecord, String> SSN_NUMBER = createField(DSL.name("ssn_number"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.use_lock_state</code>.
     */
    public final TableField<JUsersRecord, String> USE_LOCK_STATE = createField(DSL.name("use_lock_state"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.users.user_id</code>.
     */
    public final TableField<JUsersRecord, String> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>naive-it-farm.users.user_name</code>.
     */
    public final TableField<JUsersRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>naive-it-farm.users</code> table reference
     */
    public JUsers() {
        this(DSL.name("users"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.users</code> table reference
     */
    public JUsers(String alias) {
        this(DSL.name(alias), USERS);
    }

    /**
     * Create an aliased <code>naive-it-farm.users</code> table reference
     */
    public JUsers(Name alias) {
        this(alias, USERS);
    }

    private JUsers(Name alias, Table<JUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private JUsers(Name alias, Table<JUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JUsers(Table<O> child, ForeignKey<O, JUsersRecord> key) {
        super(child, key, USERS);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JUsersRecord> getPrimaryKey() {
        return Keys.KEY_USERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<JUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<JUsersRecord>>asList(Keys.KEY_USERS_PRIMARY, Keys.KEY_USERS_UK_6EFS5VMCE86YMF5Q7LMVN2UUF);
    }

    @Override
    public JUsers as(String alias) {
        return new JUsers(DSL.name(alias), this);
    }

    @Override
    public JUsers as(Name alias) {
        return new JUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JUsers rename(String name) {
        return new JUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JUsers rename(Name name) {
        return new JUsers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, Long, LocalDateTime, String, LocalDateTime, String, String, String, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
