/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JDiseaseDetailRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JDiseaseDetail extends TableImpl<JDiseaseDetailRecord> {

    private static final long serialVersionUID = 223282255;

    /**
     * The reference instance of <code>naive-it-farm.disease_detail</code>
     */
    public static final JDiseaseDetail DISEASE_DETAIL = new JDiseaseDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JDiseaseDetailRecord> getRecordType() {
        return JDiseaseDetailRecord.class;
    }

    /**
     * The column <code>naive-it-farm.disease_detail.day</code>.
     */
    public final TableField<JDiseaseDetailRecord, LocalDate> DAY = createField(DSL.name("day"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.entity_identification_number</code>.
     */
    public final TableField<JDiseaseDetailRecord, String> ENTITY_IDENTIFICATION_NUMBER = createField(DSL.name("entity_identification_number"), org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.entity_management_number</code>.
     */
    public final TableField<JDiseaseDetailRecord, String> ENTITY_MANAGEMENT_NUMBER = createField(DSL.name("entity_management_number"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.seq</code>.
     */
    public final TableField<JDiseaseDetailRecord, Short> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.created_time</code>.
     */
    public final TableField<JDiseaseDetailRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("created_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.injection_method</code>.
     */
    public final TableField<JDiseaseDetailRecord, String> INJECTION_METHOD = createField(DSL.name("injection_method"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.medication_name</code>.
     */
    public final TableField<JDiseaseDetailRecord, String> MEDICATION_NAME = createField(DSL.name("medication_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.modified_time</code>.
     */
    public final TableField<JDiseaseDetailRecord, LocalDateTime> MODIFIED_TIME = createField(DSL.name("modified_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.needle_lose_yn</code>.
     */
    public final TableField<JDiseaseDetailRecord, String> NEEDLE_LOSE_YN = createField(DSL.name("needle_lose_yn"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>naive-it-farm.disease_detail.withdrawal_period_expiration_date</code>.
     */
    public final TableField<JDiseaseDetailRecord, LocalDate> WITHDRAWAL_PERIOD_EXPIRATION_DATE = createField(DSL.name("withdrawal_period_expiration_date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * Create a <code>naive-it-farm.disease_detail</code> table reference
     */
    public JDiseaseDetail() {
        this(DSL.name("disease_detail"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.disease_detail</code> table reference
     */
    public JDiseaseDetail(String alias) {
        this(DSL.name(alias), DISEASE_DETAIL);
    }

    /**
     * Create an aliased <code>naive-it-farm.disease_detail</code> table reference
     */
    public JDiseaseDetail(Name alias) {
        this(alias, DISEASE_DETAIL);
    }

    private JDiseaseDetail(Name alias, Table<JDiseaseDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private JDiseaseDetail(Name alias, Table<JDiseaseDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JDiseaseDetail(Table<O> child, ForeignKey<O, JDiseaseDetailRecord> key) {
        super(child, key, DISEASE_DETAIL);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JDiseaseDetailRecord> getPrimaryKey() {
        return Keys.KEY_DISEASE_DETAIL_PRIMARY;
    }

    @Override
    public List<UniqueKey<JDiseaseDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<JDiseaseDetailRecord>>asList(Keys.KEY_DISEASE_DETAIL_PRIMARY);
    }

    @Override
    public JDiseaseDetail as(String alias) {
        return new JDiseaseDetail(DSL.name(alias), this);
    }

    @Override
    public JDiseaseDetail as(Name alias) {
        return new JDiseaseDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JDiseaseDetail rename(String name) {
        return new JDiseaseDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JDiseaseDetail rename(Name name) {
        return new JDiseaseDetail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<LocalDate, String, String, Short, LocalDateTime, String, String, LocalDateTime, String, LocalDate> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
