/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JCalveManagementRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JCalveManagement extends TableImpl<JCalveManagementRecord> {

    private static final long serialVersionUID = 70063300;

    /**
     * The reference instance of <code>naive-it-farm.calve_management</code>
     */
    public static final JCalveManagement CALVE_MANAGEMENT = new JCalveManagement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JCalveManagementRecord> getRecordType() {
        return JCalveManagementRecord.class;
    }

    /**
     * The column <code>naive-it-farm.calve_management.entity_identification_number</code>. 개체식별번호
     */
    public final TableField<JCalveManagementRecord, String> ENTITY_IDENTIFICATION_NUMBER = createField(DSL.name("entity_identification_number"), org.jooq.impl.SQLDataType.VARCHAR(24).nullable(false), this, "개체식별번호");

    /**
     * The column <code>naive-it-farm.calve_management.entity_management_number</code>. 개체관리번호
     */
    public final TableField<JCalveManagementRecord, String> ENTITY_MANAGEMENT_NUMBER = createField(DSL.name("entity_management_number"), org.jooq.impl.SQLDataType.VARCHAR(24).nullable(false), this, "개체관리번호");

    /**
     * The column <code>naive-it-farm.calve_management.seq</code>. 순번
     */
    public final TableField<JCalveManagementRecord, Short> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "순번");

    /**
     * The column <code>naive-it-farm.calve_management.fertilization_index</code>. 수정 회차
     */
    public final TableField<JCalveManagementRecord, Short> FERTILIZATION_INDEX = createField(DSL.name("fertilization_index"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "수정 회차");

    /**
     * The column <code>naive-it-farm.calve_management.years</code>. 년도
     */
    public final TableField<JCalveManagementRecord, String> YEARS = createField(DSL.name("years"), org.jooq.impl.SQLDataType.VARCHAR(4), this, "년도");

    /**
     * The column <code>naive-it-farm.calve_management.fertilization_date</code>. 수정일자
     */
    public final TableField<JCalveManagementRecord, LocalDateTime> FERTILIZATION_DATE = createField(DSL.name("fertilization_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "수정일자");

    /**
     * The column <code>naive-it-farm.calve_management.expected_date_confinement</code>. 분만예정일
     */
    public final TableField<JCalveManagementRecord, LocalDateTime> EXPECTED_DATE_CONFINEMENT = createField(DSL.name("expected_date_confinement"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "분만예정일");

    /**
     * The column <code>naive-it-farm.calve_management.calving_date</code>. 실제 문만일
     */
    public final TableField<JCalveManagementRecord, LocalDateTime> CALVING_DATE = createField(DSL.name("calving_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "실제 문만일");

    /**
     * The column <code>naive-it-farm.calve_management.sperm_no</code>. 정액번호
     */
    public final TableField<JCalveManagementRecord, Long> SPERM_NO = createField(DSL.name("sperm_no"), org.jooq.impl.SQLDataType.BIGINT, this, "정액번호");

    /**
     * The column <code>naive-it-farm.calve_management.nothing_special</code>. 특이사항
     */
    public final TableField<JCalveManagementRecord, String> NOTHING_SPECIAL = createField(DSL.name("nothing_special"), org.jooq.impl.SQLDataType.VARCHAR(256), this, "특이사항");

    /**
     * The column <code>naive-it-farm.calve_management.entity_identification_number_child</code>. 개체식별번호(자식)
     */
    public final TableField<JCalveManagementRecord, String> ENTITY_IDENTIFICATION_NUMBER_CHILD = createField(DSL.name("entity_identification_number_child"), org.jooq.impl.SQLDataType.VARCHAR(24), this, "개체식별번호(자식)");

    /**
     * The column <code>naive-it-farm.calve_management.entity_management_number_child</code>. 개체관리번호(자식)
     */
    public final TableField<JCalveManagementRecord, String> ENTITY_MANAGEMENT_NUMBER_CHILD = createField(DSL.name("entity_management_number_child"), org.jooq.impl.SQLDataType.VARCHAR(24), this, "개체관리번호(자식)");

    /**
     * Create a <code>naive-it-farm.calve_management</code> table reference
     */
    public JCalveManagement() {
        this(DSL.name("calve_management"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.calve_management</code> table reference
     */
    public JCalveManagement(String alias) {
        this(DSL.name(alias), CALVE_MANAGEMENT);
    }

    /**
     * Create an aliased <code>naive-it-farm.calve_management</code> table reference
     */
    public JCalveManagement(Name alias) {
        this(alias, CALVE_MANAGEMENT);
    }

    private JCalveManagement(Name alias, Table<JCalveManagementRecord> aliased) {
        this(alias, aliased, null);
    }

    private JCalveManagement(Name alias, Table<JCalveManagementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JCalveManagement(Table<O> child, ForeignKey<O, JCalveManagementRecord> key) {
        super(child, key, CALVE_MANAGEMENT);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JCalveManagementRecord> getPrimaryKey() {
        return Keys.KEY_CALVE_MANAGEMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<JCalveManagementRecord>> getKeys() {
        return Arrays.<UniqueKey<JCalveManagementRecord>>asList(Keys.KEY_CALVE_MANAGEMENT_PRIMARY);
    }

    @Override
    public JCalveManagement as(String alias) {
        return new JCalveManagement(DSL.name(alias), this);
    }

    @Override
    public JCalveManagement as(Name alias) {
        return new JCalveManagement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JCalveManagement rename(String name) {
        return new JCalveManagement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JCalveManagement rename(Name name) {
        return new JCalveManagement(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, Short, Short, String, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
