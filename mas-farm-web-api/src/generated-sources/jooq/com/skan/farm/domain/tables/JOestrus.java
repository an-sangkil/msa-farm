/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JOestrusRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JOestrus extends TableImpl<JOestrusRecord> {

    private static final long serialVersionUID = -122421738;

    /**
     * The reference instance of <code>naive-it-farm.oestrus</code>
     */
    public static final JOestrus OESTRUS = new JOestrus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JOestrusRecord> getRecordType() {
        return JOestrusRecord.class;
    }

    /**
     * The column <code>naive-it-farm.oestrus.entity_identification_number</code>.
     */
    public final TableField<JOestrusRecord, String> ENTITY_IDENTIFICATION_NUMBER = createField(DSL.name("entity_identification_number"), org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.oestrus.entity_management_number</code>.
     */
    public final TableField<JOestrusRecord, String> ENTITY_MANAGEMENT_NUMBER = createField(DSL.name("entity_management_number"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.oestrus.seq</code>.
     */
    public final TableField<JOestrusRecord, Short> SEQ = createField(DSL.name("seq"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.oestrus.age_of_month</code>.
     */
    public final TableField<JOestrusRecord, Short> AGE_OF_MONTH = createField(DSL.name("age_of_month"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>naive-it-farm.oestrus.created_time</code>.
     */
    public final TableField<JOestrusRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("created_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.oestrus.modified_time</code>.
     */
    public final TableField<JOestrusRecord, LocalDateTime> MODIFIED_TIME = createField(DSL.name("modified_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.oestrus.oestrus_datetime</code>.
     */
    public final TableField<JOestrusRecord, LocalDateTime> OESTRUS_DATETIME = createField(DSL.name("oestrus_datetime"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>naive-it-farm.oestrus.symptom</code>.
     */
    public final TableField<JOestrusRecord, String> SYMPTOM = createField(DSL.name("symptom"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * Create a <code>naive-it-farm.oestrus</code> table reference
     */
    public JOestrus() {
        this(DSL.name("oestrus"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.oestrus</code> table reference
     */
    public JOestrus(String alias) {
        this(DSL.name(alias), OESTRUS);
    }

    /**
     * Create an aliased <code>naive-it-farm.oestrus</code> table reference
     */
    public JOestrus(Name alias) {
        this(alias, OESTRUS);
    }

    private JOestrus(Name alias, Table<JOestrusRecord> aliased) {
        this(alias, aliased, null);
    }

    private JOestrus(Name alias, Table<JOestrusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JOestrus(Table<O> child, ForeignKey<O, JOestrusRecord> key) {
        super(child, key, OESTRUS);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JOestrusRecord> getPrimaryKey() {
        return Keys.KEY_OESTRUS_PRIMARY;
    }

    @Override
    public List<UniqueKey<JOestrusRecord>> getKeys() {
        return Arrays.<UniqueKey<JOestrusRecord>>asList(Keys.KEY_OESTRUS_PRIMARY);
    }

    @Override
    public JOestrus as(String alias) {
        return new JOestrus(DSL.name(alias), this);
    }

    @Override
    public JOestrus as(Name alias) {
        return new JOestrus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JOestrus rename(String name) {
        return new JOestrus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JOestrus rename(Name name) {
        return new JOestrus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, Short, Short, LocalDateTime, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
