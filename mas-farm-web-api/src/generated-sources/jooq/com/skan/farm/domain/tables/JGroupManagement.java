/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JGroupManagementRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JGroupManagement extends TableImpl<JGroupManagementRecord> {

    private static final long serialVersionUID = 513342850;

    /**
     * The reference instance of <code>naive-it-farm.group_management</code>
     */
    public static final JGroupManagement GROUP_MANAGEMENT = new JGroupManagement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JGroupManagementRecord> getRecordType() {
        return JGroupManagementRecord.class;
    }

    /**
     * The column <code>naive-it-farm.group_management.group_no</code>. 그룹번호
     */
    public final TableField<JGroupManagementRecord, Integer> GROUP_NO = createField(DSL.name("group_no"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "그룹번호");

    /**
     * The column <code>naive-it-farm.group_management.group_name</code>. 그룹 이름
     */
    public final TableField<JGroupManagementRecord, String> GROUP_NAME = createField(DSL.name("group_name"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "그룹 이름");

    /**
     * The column <code>naive-it-farm.group_management.group_desc</code>. 그룹설명
     */
    public final TableField<JGroupManagementRecord, String> GROUP_DESC = createField(DSL.name("group_desc"), org.jooq.impl.SQLDataType.CLOB, this, "그룹설명");

    /**
     * The column <code>naive-it-farm.group_management.group_crt_time</code>. 그룹 생성일
     */
    public final TableField<JGroupManagementRecord, LocalDateTime> GROUP_CRT_TIME = createField(DSL.name("group_crt_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "그룹 생성일");

    /**
     * Create a <code>naive-it-farm.group_management</code> table reference
     */
    public JGroupManagement() {
        this(DSL.name("group_management"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.group_management</code> table reference
     */
    public JGroupManagement(String alias) {
        this(DSL.name(alias), GROUP_MANAGEMENT);
    }

    /**
     * Create an aliased <code>naive-it-farm.group_management</code> table reference
     */
    public JGroupManagement(Name alias) {
        this(alias, GROUP_MANAGEMENT);
    }

    private JGroupManagement(Name alias, Table<JGroupManagementRecord> aliased) {
        this(alias, aliased, null);
    }

    private JGroupManagement(Name alias, Table<JGroupManagementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JGroupManagement(Table<O> child, ForeignKey<O, JGroupManagementRecord> key) {
        super(child, key, GROUP_MANAGEMENT);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JGroupManagementRecord> getPrimaryKey() {
        return Keys.KEY_GROUP_MANAGEMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<JGroupManagementRecord>> getKeys() {
        return Arrays.<UniqueKey<JGroupManagementRecord>>asList(Keys.KEY_GROUP_MANAGEMENT_PRIMARY);
    }

    @Override
    public JGroupManagement as(String alias) {
        return new JGroupManagement(DSL.name(alias), this);
    }

    @Override
    public JGroupManagement as(Name alias) {
        return new JGroupManagement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JGroupManagement rename(String name) {
        return new JGroupManagement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JGroupManagement rename(Name name) {
        return new JGroupManagement(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
