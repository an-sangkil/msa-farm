/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JAddressManagementRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAddressManagement extends TableImpl<JAddressManagementRecord> {

    private static final long serialVersionUID = -1767100869;

    /**
     * The reference instance of <code>naive-it-farm.address_management</code>
     */
    public static final JAddressManagement ADDRESS_MANAGEMENT = new JAddressManagement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JAddressManagementRecord> getRecordType() {
        return JAddressManagementRecord.class;
    }

    /**
     * The column <code>naive-it-farm.address_management.user_id</code>. 사용자 아이디
     */
    public final TableField<JAddressManagementRecord, String> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "사용자 아이디");

    /**
     * The column <code>naive-it-farm.address_management.management_number</code>. 관리 번호
     */
    public final TableField<JAddressManagementRecord, Long> MANAGEMENT_NUMBER = createField(DSL.name("management_number"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "관리 번호");

    /**
     * The column <code>naive-it-farm.address_management.user_name</code>. 주소록 사용자 이름
     */
    public final TableField<JAddressManagementRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "주소록 사용자 이름");

    /**
     * The column <code>naive-it-farm.address_management.memo</code>. 메모
     */
    public final TableField<JAddressManagementRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.CLOB, this, "메모");

    /**
     * Create a <code>naive-it-farm.address_management</code> table reference
     */
    public JAddressManagement() {
        this(DSL.name("address_management"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.address_management</code> table reference
     */
    public JAddressManagement(String alias) {
        this(DSL.name(alias), ADDRESS_MANAGEMENT);
    }

    /**
     * Create an aliased <code>naive-it-farm.address_management</code> table reference
     */
    public JAddressManagement(Name alias) {
        this(alias, ADDRESS_MANAGEMENT);
    }

    private JAddressManagement(Name alias, Table<JAddressManagementRecord> aliased) {
        this(alias, aliased, null);
    }

    private JAddressManagement(Name alias, Table<JAddressManagementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JAddressManagement(Table<O> child, ForeignKey<O, JAddressManagementRecord> key) {
        super(child, key, ADDRESS_MANAGEMENT);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JAddressManagementRecord> getPrimaryKey() {
        return Keys.KEY_ADDRESS_MANAGEMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<JAddressManagementRecord>> getKeys() {
        return Arrays.<UniqueKey<JAddressManagementRecord>>asList(Keys.KEY_ADDRESS_MANAGEMENT_PRIMARY);
    }

    @Override
    public JAddressManagement as(String alias) {
        return new JAddressManagement(DSL.name(alias), this);
    }

    @Override
    public JAddressManagement as(Name alias) {
        return new JAddressManagement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JAddressManagement rename(String name) {
        return new JAddressManagement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JAddressManagement rename(Name name) {
        return new JAddressManagement(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
