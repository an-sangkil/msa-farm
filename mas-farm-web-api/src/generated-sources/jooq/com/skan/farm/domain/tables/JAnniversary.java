/*
 * This file is generated by jOOQ.
 */
package com.skan.farm.domain.tables;


import com.skan.farm.domain.JNaiveItFarm;
import com.skan.farm.domain.Keys;
import com.skan.farm.domain.tables.records.JAnniversaryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAnniversary extends TableImpl<JAnniversaryRecord> {

    private static final long serialVersionUID = 176007190;

    /**
     * The reference instance of <code>naive-it-farm.anniversary</code>
     */
    public static final JAnniversary ANNIVERSARY = new JAnniversary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JAnniversaryRecord> getRecordType() {
        return JAnniversaryRecord.class;
    }

    /**
     * The column <code>naive-it-farm.anniversary.hm_mg_no</code>. 관리 번호
     */
    public final TableField<JAnniversaryRecord, Long> HM_MG_NO = createField(DSL.name("hm_mg_no"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "관리 번호");

    /**
     * The column <code>naive-it-farm.anniversary.hm_am_no</code>.
     */
    public final TableField<JAnniversaryRecord, Long> HM_AM_NO = createField(DSL.name("hm_am_no"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naive-it-farm.anniversary.hm_date</code>. yyyyMMdd 형태
     */
    public final TableField<JAnniversaryRecord, LocalDateTime> HM_DATE = createField(DSL.name("hm_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "yyyyMMdd 형태");

    /**
     * The column <code>naive-it-farm.anniversary.hm_type</code>. 생일/기념일/기타/직접 입력
     */
    public final TableField<JAnniversaryRecord, String> HM_TYPE = createField(DSL.name("hm_type"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "생일/기념일/기타/직접 입력");

    /**
     * The column <code>naive-it-farm.anniversary.user_id</code>. 사용자 아이디
     */
    public final TableField<JAnniversaryRecord, String> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "사용자 아이디");

    /**
     * Create a <code>naive-it-farm.anniversary</code> table reference
     */
    public JAnniversary() {
        this(DSL.name("anniversary"), null);
    }

    /**
     * Create an aliased <code>naive-it-farm.anniversary</code> table reference
     */
    public JAnniversary(String alias) {
        this(DSL.name(alias), ANNIVERSARY);
    }

    /**
     * Create an aliased <code>naive-it-farm.anniversary</code> table reference
     */
    public JAnniversary(Name alias) {
        this(alias, ANNIVERSARY);
    }

    private JAnniversary(Name alias, Table<JAnniversaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private JAnniversary(Name alias, Table<JAnniversaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> JAnniversary(Table<O> child, ForeignKey<O, JAnniversaryRecord> key) {
        super(child, key, ANNIVERSARY);
    }

    @Override
    public Schema getSchema() {
        return JNaiveItFarm.NAIVE_IT_FARM;
    }

    @Override
    public UniqueKey<JAnniversaryRecord> getPrimaryKey() {
        return Keys.KEY_ANNIVERSARY_PRIMARY;
    }

    @Override
    public List<UniqueKey<JAnniversaryRecord>> getKeys() {
        return Arrays.<UniqueKey<JAnniversaryRecord>>asList(Keys.KEY_ANNIVERSARY_PRIMARY);
    }

    @Override
    public JAnniversary as(String alias) {
        return new JAnniversary(DSL.name(alias), this);
    }

    @Override
    public JAnniversary as(Name alias) {
        return new JAnniversary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JAnniversary rename(String name) {
        return new JAnniversary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JAnniversary rename(Name name) {
        return new JAnniversary(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, LocalDateTime, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
