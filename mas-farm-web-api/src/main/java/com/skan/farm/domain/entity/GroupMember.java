package com.skan.farm.domain.entity;


import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 그룹멤버 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class GroupMember implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 그룹관리. */
	private GroupManagement groupManagement;

	/** 사용자 아이디. */
	private String userId;

	/** 일정관리 테이블 목록. */
	private Set<Diary> diarySet;

	/**
	 * 생성자.
	 */
	public GroupMember() {
		this.diarySet = new HashSet<Diary>();
	}

	/**
	 * 그룹관리을 설정합니다..
	 * 
	 * @param groupManagement
	 *            그룹관리
	 */
	public void setGroupManagement(GroupManagement groupManagement) {
		this.groupManagement = groupManagement;
	}

	/**
	 * 그룹관리을 가져옵니다..
	 * 
	 * @return 그룹관리
	 */
	public GroupManagement getGroupManagement() {
		return this.groupManagement;
	}

	/**
	 * 사용자 아이디을 설정합니다..
	 * 
	 * @param userId
	 *            사용자 아이디
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * 사용자 아이디을 가져옵니다..
	 * 
	 * @return 사용자 아이디
	 */
	public String getUserId() {
		return this.userId;
	}

	/**
	 * 일정관리 테이블 목록을 설정합니다..
	 * 
	 * @param diarySet
	 *            일정관리 테이블 목록
	 */
	public void setDiarySet(Set<Diary> diarySet) {
		this.diarySet = diarySet;
	}

	/**
	 * 일정관리 테이블를 추가합니다..
	 * 
	 * @param diary
	 *            일정관리 테이블
	 */
	public void addSchedule(Diary diary) {
		this.diarySet.add(diary);
	}

	/**
	 * 일정관리 테이블 목록을 가져옵니다..
	 * 
	 * @return 일정관리 테이블 목록
	 */
	public Set<Diary> getDiarySet() {
		return this.diarySet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((groupManagement == null) ? 0 : groupManagement.hashCode());
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		GroupMember other = (GroupMember) obj;
		if (groupManagement == null) {
			if (other.groupManagement != null) {
				return false;
			}
		} else if (!groupManagement.equals(other.groupManagement)) {
			return false;
		}
		if (userId == null) {
			if (other.userId != null) {
				return false;
			}
		} else if (!userId.equals(other.userId)) {
			return false;
		}
		return true;
	}

}
