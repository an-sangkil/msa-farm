package com.skan.farm.domain.entity;


import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;
import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Set;

/**
 * 질병 및 치료 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Getter@Setter
@Entity
@NoArgsConstructor
//@JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class)
@JsonIgnoreProperties(ignoreUnknown = true,value = {"hibernateLazyInitializer","$$_hibernate_interceptor", "handler"})
@JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.ANY)
public class DiseaseTreatment implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	@Builder
	public DiseaseTreatment(LocalBeefManagement localBeefManagement, DiseaseTreatmentPK diseaseTreatmentPK,  LocalDate cureDate, String diseaseName, String treatmentDetails) {
		this.localBeefManagement = localBeefManagement;
		this.diseaseTreatmentPK = diseaseTreatmentPK;
		this.cureDate = cureDate;
		this.diseaseName = diseaseName;
		this.treatmentDetails = treatmentDetails;
	}

	@Embeddable
	@Data
	@AllArgsConstructor
	@NoArgsConstructor
	public static class DiseaseTreatmentPK implements Serializable {
		/**
		 * 개체식별번호.
		 */
		@Column(length = 12)
		private String entityIdentificationNumber;


		/**
		 * 개체관리번호. ( 일련번호 8자리)
		 */
		@Column(length = 8)
		private String entityManagementNumber;

		/**
		 * 날짜
		 */
		@JsonDeserialize(using = LocalDateDeserializer.class)
		@JsonSerialize(using = LocalDateSerializer.class)
		@DateTimeFormat(pattern = "yyyy-MM-dd")
		@JsonFormat(pattern = "yyyy-MM-dd")
		private LocalDate day;

	}

	@EmbeddedId
	DiseaseTreatmentPK diseaseTreatmentPK;

	/** 치료_날짜. */
	@JsonDeserialize(using = LocalDateDeserializer.class)
	@JsonSerialize(using = LocalDateSerializer.class)
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@JsonFormat(pattern = "yyyy-MM-dd")
	private LocalDate cureDate;

	/** 질병 명 */
	private String diseaseName;

	/** 증상 및 증후  */
	private String symptom;

	/** 치료내역 및 방법 (상세 치료내역) */
	private String treatmentDetails;

	/**
	 * 치료 당시의 개월수
	 */
	private Short cureAgeOfMonth;

	/** 비고 */
	private String remark;




	/**
	 * 생성일시.
	 */
	@JsonDeserialize(using = LocalDateTimeDeserializer.class)
	@JsonSerialize(using = LocalDateTimeSerializer.class)
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@CreationTimestamp
	@Column(updatable = false)
	private LocalDateTime createdTime;

	/**
	 * 수정시간.
	 */
	@JsonDeserialize(using = LocalDateTimeDeserializer.class)
	@JsonSerialize(using = LocalDateTimeSerializer.class)
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@UpdateTimestamp
	private LocalDateTime modifiedTime;

	/** 한우(암소/수소) 개체관리기록부. */
	@MapsId("localBeefManagementPK")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "entityIdentificationNumber", referencedColumnName = "entityIdentificationNumber"),
			@JoinColumn(name = "entityManagementNumber", referencedColumnName = "entityManagementNumber"),
	})
	@JsonBackReference("diseaseTreatmentSet")
	private LocalBeefManagement localBeefManagement;


	/**
	 * 상세 치료 처방 내역
	 */
	@OneToMany(mappedBy = "diseaseTreatment" , fetch = FetchType.LAZY)
	@JsonManagedReference("diseaseDetails")
	private Set<DiseaseDetail> diseaseDetails;

}
